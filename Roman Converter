/*
Roman Numeral Converter
Convert the given number into a roman numeral.

Roman numerals	Arabic numerals
M	            1000
CM	           900
D	             500
CD	           400
C	             100
XC	            90
L	              50
XL	            40
X	              10
IX	             9
V	               5
IV	             4
I	               1
All roman numerals answers should be provided in upper-case.

*/


/* Note: This excercise assumes that the biggest decimal that is represented in a single roman character is 1.000 (M). Hence this only works with numbers less than 3.000
I could expand the roman converter dicc for bigger decimals*/

// Main function

function convertToRoman(num) {

  let arr = breakUpNum(num) 
  let romanNumbers = ''

  // Converts each number to roman letters and concats it to a string
  arr.forEach((num) => {
    
    if(num > 0){
      romanNumbers = romanNumbers
                      .concat(romanConverter(num))}
  })

 return romanNumbers ;
}

convertToRoman(68);

// Auxilary functions


// Breaksdown number into its digits and their decimal place. Example: 34 returns ['30',4']

function breakUpNum(num){

  let digits = num.toString().split('')

  digits = digits.reverse().map((digit, index) => {
      // I reversed it to work better with index
    return digit.concat('0'.repeat(index))
    
  })
    // Back to original order
  return digits.reverse()
}

function romanConverter (num){

    let dicc = {
      '3000' : 'MMM',
      '2000' : 'MM',
      '1000' : 'M', 
      '900'  : 'CM',
      '800'  : 'DCCC',
      '700'  : 'DCC',
      '600'  : 'DC',
      '500'  : 'D', 
      '400'  : 'CD',
      '300'  : 'CCC',
      '200'  : 'CC',
      '100'  : 'C',
      '90'   : 'XC',
      '80'   : 'LXXX',
      '70'   : 'LXX',
      '60'   : 'LX',
      '50'   : 'L',
      '40'   : 'XL',
      '30'   : 'XXX',
      '20'   : 'XX',
      '10'   : 'X',
      '9'    : 'IX',
      '8'    : 'VIII',
      '7'    : 'VII',
      '6'    : 'VI',
      '5'    : 'V',
      '4'    : 'IV',
      '3'    : 'III',
      '2'    : 'II', 
      '1'    : 'I',
    }



  return dicc[num]
  
}

